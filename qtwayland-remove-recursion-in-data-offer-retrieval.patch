From 5648fc10336a53c5a568c98b1dc0e841e39b8427 Mon Sep 17 00:00:00 2001
From: David Edmundson <davidedmundson@kde.org>
Date: Tue, 23 Jul 2019 08:44:46 +0200
Subject: [PATCH] Client: Remove recursion in data offer retrieval

A loop functions just as well is more readable and uses less stack
memory.

Change-Id: I6f6c6b7b8047c42080fb8b9e0bc3eae96f8872ab
Reviewed-by: David Faure <david.faure@kdab.com>
Reviewed-by: Johan Helsing <johan.helsing@qt.io>
---
 src/client/qwaylanddataoffer.cpp | 37 +++++++++++++++++---------------
 1 file changed, 20 insertions(+), 17 deletions(-)

diff --git a/src/client/qwaylanddataoffer.cpp b/src/client/qwaylanddataoffer.cpp
index 3da16ed00414..1bb2624998cb 100644
--- a/src/client/qwaylanddataoffer.cpp
+++ b/src/client/qwaylanddataoffer.cpp
@@ -165,24 +165,27 @@ int QWaylandMimeData::readData(int fd, QByteArray &data) const
     timeout.tv_sec = 1;
     timeout.tv_usec = 0;
 
-    int ready = select(FD_SETSIZE, &readset, nullptr, nullptr, &timeout);
-    if (ready < 0) {
-        qWarning() << "QWaylandDataOffer: select() failed";
-        return -1;
-    } else if (ready == 0) {
-        qWarning("QWaylandDataOffer: timeout reading from pipe");
-        return -1;
-    } else {
-        char buf[4096];
-        int n = QT_READ(fd, buf, sizeof buf);
-
-        if (n > 0) {
-            data.append(buf, n);
-            n = readData(fd, data);
-        } else if (n < 0) {
-            qWarning("QWaylandDataOffer: read() failed");
+    Q_FOREVER {
+        int ready = select(FD_SETSIZE, &readset, nullptr, nullptr, &timeout);
+        if (ready < 0) {
+            qWarning() << "QWaylandDataOffer: select() failed";
+            return -1;
+        } else if (ready == 0) {
+            qWarning("QWaylandDataOffer: timeout reading from pipe");
+            return -1;
+        } else {
+            char buf[4096];
+            int n = QT_READ(fd, buf, sizeof buf);
+
+            if (n < 0) {
+                qWarning("QWaylandDataOffer: read() failed");
+                return -1;
+            } else if (n == 0) {
+                return 0;
+            } else if (n > 0) {
+                data.append(buf, n);
+            }
         }
-        return n;
     }
 }
 
-- 
2.26.2

